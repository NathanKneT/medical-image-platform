{
  "openapi": "3.1.0",
  "info": {
    "title": "Medical Image Analysis Platform",
    "description": "A production-ready API for medical image processing with real-time updates",
    "version": "1.0.0"
  },
  "paths": {
    "/api/v1/images/upload": {
      "post": {
        "tags": [
          "Images"
        ],
        "summary": "Upload Image",
        "description": "Upload medical image for analysis.\n\nThis endpoint demonstrates several production patterns:\n1. File validation and security checks\n2. Async file I/O with aiofiles\n3. Metadata extraction from medical images\n4. Background task triggering\n5. Proper error handling and rollback\n\nArgs:\n    background_tasks: FastAPI background tasks for async processing\n    file: Uploaded file from multipart form\n    description: Optional description\n    patient_id: Anonymized patient identifier\n    user_id: User uploading the file\n    db: Database session\n    \nReturns:\n    ImageUploadResponse with image metadata and upload status",
        "operationId": "upload_image_api_v1_images_upload_post",
        "parameters": [
          {
            "name": "description",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Description"
            }
          },
          {
            "name": "patient_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Patient Id"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_image_api_v1_images_upload_post"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageUploadResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/{image_id}": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Get Image",
        "description": "Get image metadata by ID.\n\nArgs:\n    image_id: Unique image identifier\n    db: Database session\n    \nReturns:\n    ImageResponse with complete image metadata",
        "operationId": "get_image_api_v1_images__image_id__get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ImageResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Images"
        ],
        "summary": "Delete Image",
        "description": "Delete image and associated file.\n\nThis endpoint demonstrates proper cleanup of both database\nrecords and file system resources.\n\nArgs:\n    image_id: Unique image identifier\n    db: Database session\n    \nReturns:\n    Success message",
        "operationId": "delete_image_api_v1_images__image_id__delete",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/{image_id}/download": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "Download Image",
        "description": "Download image file.\n\nIn production, this would typically redirect to a signed URL\nfrom cloud storage (S3, GCS) rather than serving files directly.\n\nArgs:\n    image_id: Unique image identifier\n    db: Database session\n    \nReturns:\n    FileResponse with image content",
        "operationId": "download_image_api_v1_images__image_id__download_get",
        "parameters": [
          {
            "name": "image_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Image Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/images/": {
      "get": {
        "tags": [
          "Images"
        ],
        "summary": "List Images",
        "description": "List images with optional filtering.\n\nArgs:\n    skip: Number of records to skip (pagination)\n    limit: Maximum number of records to return\n    user_id: Filter by user who uploaded\n    modality: Filter by imaging modality\n    db: Database session\n    \nReturns:\n    List of ImageResponse objects",
        "operationId": "list_images_api_v1_images__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          },
          {
            "name": "modality",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Modality"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ImageResponse"
                  },
                  "title": "Response List Images Api V1 Images  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analysis/start": {
      "post": {
        "tags": [
          "Analysis"
        ],
        "summary": "Start Analysis",
        "description": "Start AI analysis for an uploaded image.\n\nThis endpoint demonstrates the async processing pattern:\n1. Immediately create analysis record\n2. Return task ID to client\n3. Process in background\n4. Send updates via WebSocket\n\nArgs:\n    request: Analysis request with image and model IDs\n    background_tasks: FastAPI background tasks\n    db: Database session\n    \nReturns:\n    AnalysisStartResponse with task ID for tracking",
        "operationId": "start_analysis_api_v1_analysis_start_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnalysisRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisStartResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analysis/{analysis_id}": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "Get Analysis Result",
        "description": "Get analysis result by ID.\n\nThis endpoint provides the current status and results of an analysis.\nClients can poll this endpoint or use WebSocket for real-time updates.\n\nArgs:\n    analysis_id: Unique analysis identifier\n    db: Database session\n    \nReturns:\n    AnalysisResponse with current status and results",
        "operationId": "get_analysis_result_api_v1_analysis__analysis_id__get",
        "parameters": [
          {
            "name": "analysis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analysis Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnalysisResponse"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Analysis"
        ],
        "summary": "Cancel Analysis",
        "description": "Cancel running analysis.\n\nThis endpoint demonstrates how to handle cancellation of\nlong-running background tasks efficiently and without memory overhead.",
        "operationId": "cancel_analysis_api_v1_analysis__analysis_id__delete",
        "parameters": [
          {
            "name": "analysis_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "title": "Analysis Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analysis/": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "List Analyses",
        "description": "List analysis results with optional filtering.\n\nArgs:\n    skip: Number of records to skip (pagination)\n    limit: Maximum number of records to return\n    status: Filter by analysis status\n    user_id: Filter by user who requested analysis\n    db: Database session\n    \nReturns:\n    List of AnalysisResponse objects",
        "operationId": "list_analyses_api_v1_analysis__get",
        "parameters": [
          {
            "name": "skip",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 0,
              "title": "Skip"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 50,
              "title": "Limit"
            }
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/AnalysisStatus"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Status"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "User Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnalysisResponse"
                  },
                  "title": "Response List Analyses Api V1 Analysis  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/v1/analysis/models/": {
      "get": {
        "tags": [
          "Analysis"
        ],
        "summary": "List Ai Models",
        "description": "List available AI models.\n\nArgs:\n    active_only: Whether to return only active models\n    db: Database session\n    \nReturns:\n    List of AI model information",
        "operationId": "list_ai_models_api_v1_analysis_models__get",
        "parameters": [
          {
            "name": "active_only",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean",
              "default": true,
              "title": "Active Only"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object"
                  },
                  "title": "Response List Ai Models Api V1 Analysis Models  Get"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Root",
        "description": "Root endpoint with API documentation links",
        "operationId": "root__get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "text/html": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Health"
        ],
        "summary": "Health Check",
        "description": "Comprehensive health check endpoint",
        "operationId": "health_check_health_get",
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {

                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnalysisRequest": {
        "properties": {
          "image_id": {
            "type": "string",
            "title": "Image Id",
            "description": "ID of image to analyze"
          },
          "model_id": {
            "type": "string",
            "title": "Model Id",
            "description": "ID of AI model to use"
          },
          "user_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "User Id",
            "description": "User requesting the analysis"
          },
          "priority": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority",
            "description": "Analysis priority: low, normal, high",
            "default": "normal"
          }
        },
        "type": "object",
        "required": [
          "image_id",
          "model_id"
        ],
        "title": "AnalysisRequest",
        "description": "Request schema for starting AI analysis."
      },
      "AnalysisResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "image_id": {
            "type": "string",
            "title": "Image Id"
          },
          "ai_model_id": {
            "type": "string",
            "title": "Ai Model Id"
          },
          "status": {
            "$ref": "#/components/schemas/AnalysisStatus"
          },
          "progress_percentage": {
            "type": "number",
            "maximum": 100,
            "minimum": 0,
            "title": "Progress Percentage"
          },
          "confidence_score": {
            "anyOf": [
              {
                "type": "number",
                "maximum": 1,
                "minimum": 0
              },
              {
                "type": "null"
              }
            ],
            "title": "Confidence Score"
          },
          "results": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Results"
          },
          "error_message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Message"
          },
          "error_code": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Error Code"
          },
          "processing_time_seconds": {
            "anyOf": [
              {
                "type": "number"
              },
              {
                "type": "null"
              }
            ],
            "title": "Processing Time Seconds"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "image_filename": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Filename"
          },
          "model_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Name"
          },
          "model_version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Model Version"
          }
        },
        "type": "object",
        "required": [
          "id",
          "image_id",
          "ai_model_id",
          "status",
          "progress_percentage",
          "created_at",
          "updated_at"
        ],
        "title": "AnalysisResponse",
        "description": "Complete analysis result response schema."
      },
      "AnalysisStartResponse": {
        "properties": {
          "analysis_id": {
            "type": "string",
            "title": "Analysis Id",
            "description": "Unique analysis identifier for tracking"
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnalysisStatus"
              }
            ],
            "description": "Initial analysis status"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          },
          "estimated_completion_time": {
            "type": "integer",
            "title": "Estimated Completion Time",
            "description": "Estimated completion time in seconds"
          },
          "websocket_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Websocket Url",
            "description": "WebSocket URL for real-time updates"
          }
        },
        "type": "object",
        "required": [
          "analysis_id",
          "status",
          "message",
          "estimated_completion_time"
        ],
        "title": "AnalysisStartResponse",
        "description": "Response schema for analysis start request."
      },
      "AnalysisStatus": {
        "type": "string",
        "enum": [
          "PENDING",
          "ANALYZING",
          "COMPLETE",
          "FAILED",
          "CANCELLED"
        ],
        "title": "AnalysisStatus",
        "description": "Analysis status enumeration."
      },
      "Body_upload_image_api_v1_images_upload_post": {
        "properties": {
          "file": {
            "type": "string",
            "format": "binary",
            "title": "File"
          }
        },
        "type": "object",
        "required": [
          "file"
        ],
        "title": "Body_upload_image_api_v1_images_upload_post"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "ImageResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id"
          },
          "filename": {
            "type": "string",
            "title": "Filename"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height"
          },
          "modality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modality"
          },
          "patient_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Patient Id"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Description"
          },
          "is_processed": {
            "type": "boolean",
            "title": "Is Processed",
            "default": false
          },
          "uploaded_by": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Uploaded By"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "file_size",
          "mime_type",
          "created_at",
          "updated_at"
        ],
        "title": "ImageResponse",
        "description": "Complete image metadata response schema."
      },
      "ImageUploadResponse": {
        "properties": {
          "id": {
            "type": "string",
            "title": "Id",
            "description": "Unique image identifier"
          },
          "filename": {
            "type": "string",
            "title": "Filename",
            "description": "Original filename"
          },
          "file_size": {
            "type": "integer",
            "title": "File Size",
            "description": "File size in bytes"
          },
          "mime_type": {
            "type": "string",
            "title": "Mime Type",
            "description": "MIME type of the file"
          },
          "width": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Width",
            "description": "Image width in pixels"
          },
          "height": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Height",
            "description": "Image height in pixels"
          },
          "modality": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Modality",
            "description": "Medical imaging modality"
          },
          "upload_url": {
            "type": "string",
            "title": "Upload Url",
            "description": "URL to download the uploaded image"
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At",
            "description": "Upload timestamp"
          },
          "message": {
            "type": "string",
            "title": "Message",
            "description": "Success message"
          }
        },
        "type": "object",
        "required": [
          "id",
          "filename",
          "file_size",
          "mime_type",
          "upload_url",
          "created_at",
          "message"
        ],
        "title": "ImageUploadResponse",
        "description": "Response schema for successful image upload."
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError"
      }
    }
  }
}